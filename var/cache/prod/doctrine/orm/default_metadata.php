<?php

// This file has been auto-generated by the Symfony Cache Component.

return [[

'App__Entity__Media__CLASSMETADATA__' => 0,
'App__Entity__MediaList__CLASSMETADATA__' => 1,

], [

0 => static function () {
    return \Symfony\Component\VarExporter\Internal\Hydrator::hydrate(
        $o = [
            clone (($p = &\Symfony\Component\VarExporter\Internal\Registry::$prototypes)['Doctrine\\ORM\\Mapping\\ClassMetadata'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('Doctrine\\ORM\\Mapping\\ClassMetadata')),
            clone ($p['Doctrine\\ORM\\Mapping\\FieldMapping'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('Doctrine\\ORM\\Mapping\\FieldMapping')),
            clone $p['Doctrine\\ORM\\Mapping\\FieldMapping'],
            clone $p['Doctrine\\ORM\\Mapping\\FieldMapping'],
            clone $p['Doctrine\\ORM\\Mapping\\FieldMapping'],
            clone $p['Doctrine\\ORM\\Mapping\\FieldMapping'],
            clone ($p['Doctrine\\ORM\\Id\\IdentityGenerator'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('Doctrine\\ORM\\Id\\IdentityGenerator')),
        ],
        null,
        [
            'stdClass' => [
                'namespace' => [
                    'App\\Entity',
                ],
                'rootEntityName' => [
                    'App\\Entity\\Media',
                ],
                'customRepositoryClassName' => [
                    'App\\Repository\\MediaRepository',
                ],
                'identifier' => [
                    [
                        'id',
                    ],
                ],
                'generatorType' => [
                    4,
                ],
                'fieldMappings' => [
                    [
                        'id' => $o[1],
                        'title' => $o[2],
                        'author' => $o[3],
                        'download_date' => $o[4],
                        'path' => $o[5],
                    ],
                ],
                'fieldNames' => [
                    [
                        'id' => 'id',
                        'title' => 'title',
                        'author' => 'author',
                        'download_date' => 'download_date',
                        'path' => 'path',
                    ],
                ],
                'columnNames' => [
                    [
                        'id' => 'id',
                        'title' => 'title',
                        'author' => 'author',
                        'download_date' => 'download_date',
                        'path' => 'path',
                    ],
                ],
                'table' => [
                    [
                        'name' => 'media',
                    ],
                ],
                'idGenerator' => [
                    $o[6],
                ],
                'name' => [
                    'App\\Entity\\Media',
                ],
                'id' => [
                    1 => true,
                ],
                'type' => [
                    1 => 'integer',
                    'string',
                    'string',
                    'date',
                    'text',
                ],
                'fieldName' => [
                    1 => 'id',
                    'title',
                    'author',
                    'download_date',
                    'path',
                ],
                'columnName' => [
                    1 => 'id',
                    'title',
                    'author',
                    'download_date',
                    'path',
                ],
                'length' => [
                    2 => 255,
                    255,
                ],
            ],
        ],
        $o[0],
        []
    );
},
1 => static function () {
    return \Symfony\Component\VarExporter\Internal\Hydrator::hydrate(
        $o = [
            clone (($p = &\Symfony\Component\VarExporter\Internal\Registry::$prototypes)['Doctrine\\ORM\\Mapping\\ClassMetadata'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('Doctrine\\ORM\\Mapping\\ClassMetadata')),
            clone ($p['Doctrine\\ORM\\Mapping\\FieldMapping'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('Doctrine\\ORM\\Mapping\\FieldMapping')),
            clone $p['Doctrine\\ORM\\Mapping\\FieldMapping'],
            clone $p['Doctrine\\ORM\\Mapping\\FieldMapping'],
            clone $p['Doctrine\\ORM\\Mapping\\FieldMapping'],
            clone $p['Doctrine\\ORM\\Mapping\\FieldMapping'],
            clone $p['Doctrine\\ORM\\Mapping\\FieldMapping'],
            clone $p['Doctrine\\ORM\\Mapping\\FieldMapping'],
            clone $p['Doctrine\\ORM\\Mapping\\FieldMapping'],
            clone $p['Doctrine\\ORM\\Mapping\\FieldMapping'],
            clone $p['Doctrine\\ORM\\Mapping\\FieldMapping'],
            clone ($p['Doctrine\\ORM\\Id\\IdentityGenerator'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('Doctrine\\ORM\\Id\\IdentityGenerator')),
        ],
        null,
        [
            'stdClass' => [
                'namespace' => [
                    'App\\Entity',
                ],
                'rootEntityName' => [
                    'App\\Entity\\MediaList',
                ],
                'customRepositoryClassName' => [
                    'App\\Repository\\MediaListRepository',
                ],
                'identifier' => [
                    [
                        'id',
                    ],
                ],
                'generatorType' => [
                    4,
                ],
                'fieldMappings' => [
                    [
                        'id' => $o[1],
                        'title' => $o[2],
                        'url' => $o[3],
                        'x_last_videos' => $o[4],
                        'delete_after' => $o[5],
                        'cronjob' => $o[6],
                        'quality' => $o[7],
                        'path' => $o[8],
                        'type' => $o[9],
                        'archived' => $o[10],
                    ],
                ],
                'fieldNames' => [
                    [
                        'id' => 'id',
                        'title' => 'title',
                        'url' => 'url',
                        'x_last_videos' => 'x_last_videos',
                        'delete_after' => 'delete_after',
                        'cronjob' => 'cronjob',
                        'quality' => 'quality',
                        'path' => 'path',
                        'type' => 'type',
                        'archived' => 'archived',
                    ],
                ],
                'columnNames' => [
                    [
                        'id' => 'id',
                        'title' => 'title',
                        'url' => 'url',
                        'x_last_videos' => 'x_last_videos',
                        'delete_after' => 'delete_after',
                        'cronjob' => 'cronjob',
                        'quality' => 'quality',
                        'path' => 'path',
                        'type' => 'type',
                        'archived' => 'archived',
                    ],
                ],
                'table' => [
                    [
                        'name' => 'media_list',
                    ],
                ],
                'idGenerator' => [
                    $o[11],
                ],
                'name' => [
                    'App\\Entity\\MediaList',
                ],
                'id' => [
                    1 => true,
                ],
                'type' => [
                    1 => 'integer',
                    'string',
                    'text',
                    'integer',
                    'integer',
                    'string',
                    'integer',
                    'text',
                    'integer',
                    'boolean',
                ],
                'fieldName' => [
                    1 => 'id',
                    'title',
                    'url',
                    'x_last_videos',
                    'delete_after',
                    'cronjob',
                    'quality',
                    'path',
                    'type',
                    'archived',
                ],
                'columnName' => [
                    1 => 'id',
                    'title',
                    'url',
                    'x_last_videos',
                    'delete_after',
                    'cronjob',
                    'quality',
                    'path',
                    'type',
                    'archived',
                ],
                'length' => [
                    2 => 255,
                    6 => 20,
                ],
                'options' => [
                    10 => [
                        'default' => false,
                    ],
                ],
            ],
        ],
        $o[0],
        []
    );
},

]];
